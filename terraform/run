#! /bin/env bash

# Exit values:
# 0 on success
# 1 on failure

function usage {
    local txt=(
"Build script for serverless applications"
"Usage: $SCRIPT [options] <command> [arguments]"
""
"Commands:"
"  plan              Build the application code"
"  test              Run the infrastructure integration tests"
"  deploy            Deploy the the application to cloud"
""
"Options:"
"  --help, -h        Print help"
"  --version, -v     Print version"

    )
    printf "%s\n" "${txt[@]}"
}

function plan {
  print "executing the terraform plan"
}

function test {
  print "executing terraform test"
}

function deploy {
  print "executing terraform deploy"
}

#
# Process options
#
while(( $# ))
do
    case "$1" in

        --help | -h)
            usage
            exit 0
        ;;

        plan \
        | test \
        | deploy)
            command=$1
            shift   # shifts positional arguments passed
            app-$command $* # call the command and pass in the remaining commands, the commands will be indexed from $1 from the perspective of the command
            exit 0
        ;;

        *)
            badusage "Option/Command not recognized"
            exit 1
        ;;
    esac
done

badusage
exit 1
