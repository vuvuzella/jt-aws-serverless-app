version: 2.1

executors:
  serverless-base-image:
    docker:
      - image: vuvuzella/docker-serverless-base-image:0.1.6
        # auth:
        #   username: $DOCKERHUB_USERNAME
        #   password: $DOCKERHUB_PASSWORD
    working_directory: /root/project

orbs:
  browser-tools: circleci/browser-tools@1.1.0
  aws-cli: circleci/aws-cli@2.1.0

jobs:
  Install_Build_Dep:
    executor: serverless-base-image
    steps:
      - checkout
      - run:
          name: Install Build Dependencies
          command: |
            cd app
            npm install
      - save_cache:
          key: app_dependencies-{{ .Branch }}-{{ checksum "app/package-lock.json" }}
          paths:
            - app/node_modules

  Package_App:
    executor: serverless-base-image
    steps:
      - checkout
      - attach_workspace:
          at: /root/project
      - restore_cache:
          keys:
            - app_dependencies-{{ .Branch }}-{{ checksum "app/package-lock.json" }}
            # - app_dependencies-
      - run:
          name: Build Application
          command: |
            ./run clean
            ./run build
      - persist_to_workspace:
          root: /root/project
          paths:
            - artifacts

  Unit_Test:
    executor: serverless-base-image
    steps:
      - checkout
      - restore_cache:
          keys:
            - app_dependencies-{{ .Branch }}-{{ checksum "app/package-lock.json" }}
      - run:
          name: Unit Test
          command: |
            pushd app
            npm run test:unit

  Integration_Test:
    executor: serverless-base-image
    steps:
      - checkout
      - restore_cache:
          keys:
            - app_dependencies-{{ .Branch }}-{{ checksum "app/package-lock.json" }}
      - run:
          name: Integration Test
          command: |
            pushd app
            npm run test:integration

  Deploy_App:
    executor: serverless-base-image
    steps:
      - checkout
      - attach_workspace:
          at: /root/project
      - run:
          name: Deploy Application to AWS
          command: |
            echo 'Deploying Serverless App to AWS'
            ls -a

workflows:
  Example_Workflow:
    jobs:
      - Install_Build_Dep

      # Run Unit Test and Integration Test concurrently
      - Unit_Test:
          requires:
            - Install_Build_Dep

      # For serverless/infrastructure testing, Parallelization of Integration Test might not be possible
      # because of the need to deploy infra first before running tests
      - Integration_Test:
          requires:
            - Install_Build_Dep

      - Hold_For_Approval:
          type: approval
          requires:
            - Integration_Test
            - Unit_Test

      - Package_App:
          requires:
            - Hold_For_Approval

      - Deploy_App:
          requires:
            - Package_App
