#!/usr/bin/env bash

# Phases:
# 1. Run unit tests
# 2. Build application and create artifacts
# 3. Deploy infrastructure and application code
# 4. Run integration tests
# 5. If all tests pass, deploy to production (currently imaginary). Else, deploy previous artifact

# Template from https://dbwebb.se/kunskap/create-bash-script-with-options-commands-and-arguments

# Exit values:
# 0 on success
# 1 on failure

# Name of script
SCRIPT=$( basename "$0" ) 

# Current script version
VERSION="0.0.1"


#
# Message to display if the tool is incorrectly used
#
function badusage {
    local message="$1"
    local txt=(
"For an overview of the command, execute:"
"$SCRIPT --help"
    )

    [[ $message ]] && printf "$message\n"

    printf "%s\n" "${txt[@]}"
}

#
# Message to display the version
#
function version {
    local txt=(
"$SCRIPT version $VERSION"
    )
    printf "%s\n" "${txt[@]}"
}

function proj-build {

  proj-clean

  pushd app
  ./run build
  popd

  mkdir artifacts
  cp ./app/app.zip ./artifacts
  cp ./app/dependencies.zip ./artifacts

  echo 'Project Built Successfully'
}

function proj-deploy {

  proj-clean

  proj-build

  pushd terraform
  echo "terragrunt plan"
  echo "terragrunt apply -auto-approve"
  popd

}

function proj-clean {
  rm -rf ./artifacts
}


#
# Process options
#
while(( $# ))
do
    case "$1" in

        --help | -h)
            usage
            exit 0
        ;;

        --version | -v)
            version
            exit 0
        ;;

        clean)
          command=$1
          shift
          proj-$command $*
          exit 0
        ;;

        build)
          command=$1
          shift
          proj-$command $*
          exit 0
        ;;

        test)
          echo 'Testing not yet implemented'
          exit 0
        ;;

        deploy)
          command=$1
          shift   # shifts positional arguments passed
          proj-$command $* # call the command and pass in the remaining commands, the commands will be indexed from $1 from the perspective of the command
          exit 0
        ;;

        *)
          badusage "Option/Command not recognized"
          exit 1
        ;;
    # TODO: Add build, test and deploy, rollback? functions
    esac
done

badusage
exit 1
